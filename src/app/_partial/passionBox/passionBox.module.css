.editor {
  --show-rows: 7;
  --editor-padding: var(--spacing-1);
  --content-width: 350px;
  --content-height: calc(
    calc(var(--show-rows) * calc(1rem + var(--spacing-0))) +
      calc(2 * var(--editor-padding))
  );
  --animation-time: 6s;
  position: relative;
  border: var(--grid-border);
  border-radius: var(--spacing-1);
  background: var(--color-accent-1);
  max-width: calc(var(--content-width) + var(--spacing-5));
  height: fit-content;
  user-select: none;
}

.editorStatus {
  --status-width: 13ch;
  --status-height: calc(1em + calc(2 * var(--spacing-0)));
  --status-gap: var(--spacing-1);
  position: absolute;
  z-index: 1;
  align-items: center;
  font-weight: 500;
  bottom: calc(-1 * var(--spacing-1));
  right: calc(-1 * var(--spacing-1));
  padding: var(--spacing-1) var(--spacing-2);
  width: var(--status-width);
  height: var(--status-height);
  background: var(--color-accent-2);
  border: var(--grid-border);
  border-radius: 99px;
  box-shadow: 0 0 var(--spacing-0) var(--color-accent-1);
  overflow: hidden;
}

.editorStatus::before {
  content: "";
  position: absolute;
  z-index: 1;
  inset: 0;
  height: var(--spacing-1);
  background: linear-gradient(to top, transparent, var(--color-accent-2));
}

.editorStatus::after {
  content: "";
  position: absolute;
  z-index: 1;
  inset: 0;
  top: calc(100% - var(--spacing-1));
  background: linear-gradient(to bottom, transparent, var(--color-accent-2));
}

/** Status wrapper */
.editorStatus > * {
  position: absolute;
  width: var(--status-width);
  height: var(--status-height);
  animation: change-status var(--animation-time) infinite;
}

.editorStatus > * > * {
  width: var(--status-width);
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--status-gap);
  color: var(--color-emphasis-medium);
}

/** Editor Status Icon */
.editorStatus *[data-status] > *:first-child {
  font-size: 1.2em;
}

/** Editor Status "error" */
.editorStatus *[data-status="error"] {
  color: var(--color-destructive-lighter);
}

/** Editor Status "compiling" > Spinner */
.editorStatus *[data-status="compiling"] > *:first-child {
  animation: spinner-rotation 0.5s infinite linear;
}

/** Editor Status "compiled" > Checkmark */
.editorStatus *[data-status="compiled"] {
  color: var(--color-primary);
}

.editorStatus *[data-status="compiling"] {
  /* Compiling: 2nd position */
  transform: translateY(
    calc(-1 * calc(var(--status-height) + var(--status-gap)))
  );
}

.editorStatus > * > *[data-status="compiled"] {
  /* Compiled: 3rd position */
  transform: translateY(
    calc(-2 * calc(var(--status-height) + var(--status-gap)))
  );
}

.editorHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--editor-padding);
  background: var(--color-accent-0);
  color: var(--color-emphasis-medium);
  border-bottom: var(--grid-border);
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}

/** Window Header Title */
.editorHeader > *:first-child {
  display: flex;
  align-items: center;
  gap: var(--spacing-1);
}

/** Window Menu */
.editorHeader > *:last-child {
  display: flex;
  gap: var(--spacing-0);
}

/** Window Menu Item */
.editorHeader *[data-action] {
  width: var(--spacing-1);
  height: var(--spacing-1);
  border-radius: 100%;
}

.editorHeader *[data-action="minimize"] {
  background: var(--color-emphasis-low);
}

.editorHeader *[data-action="maximize"] {
  background: var(--color-primary);
}

.editorHeader *[data-action="close"] {
  background: var(--color-destructive);
}

.editorContentWrapper {
  position: relative;
  height: 100%;
  width: 100%;
  max-width: var(--content-width);
  height: var(--content-height);
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
  overflow: hidden;
}

.editorContent {
  position: absolute;
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-0);
  padding: var(--editor-padding);
  background: var(--color-accent-1);
  width: var(--content-width);
  height: fit-content;
  overflow: hidden;
}

.editorContent > span {
  width: 20px;
  height: 1rem;
  background: red;
  border-radius: 3px;
  flex-grow: 0;
}

.editorContent > span[data-state="error"] {
  background: var(--color-destructive);
}

.editorContent > span[data-state="valid"] {
  background: var(--color-primary);
}

.editorContent > span[data-state="default"] {
  background: var(--color-accent-3);
}

.editorContentWrapper::after {
  content: "";
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to bottom, transparent 50%, var(--color-accent-1)),
    linear-gradient(to right, transparent 50%, var(--color-accent-1));
}

.cursor {
  --fs-click: 1.05rem;
  --fs-default: 1.25rem;
  --transform-1: translateX(210px);
  --transform-2: translate(120px, calc(3 * calc(1rem + var(--spacing-0))));
  position: absolute;
  z-index: 2;
  font-size: var(--fs-default);
  color: var(--color-emphasis-high);
  left: calc(var(--editor-padding) + 0.25rem);
  top: calc(var(--editor-padding) + 0.25rem);
  animation: cursor-animation var(--animation-time) infinite;
}

.editorContent > span[data-error-index="1"] {
  animation: fade-to-valid var(--animation-time) infinite;
  animation-delay: calc(0.1 * var(--animation-time));
}

.editorContent > span[data-error-index="2"] {
  animation: fade-to-valid var(--animation-time) infinite;
  animation-delay: calc(0.4 * var(--animation-time));
}

@keyframes cursor-animation {
  5% {
    /* Move to first error */
    transform: var(--transform-1);
    font-size: var(--fs-default);
  }
  10% {
    /* [press] */
    transform: var(--transform-1);
    font-size: var(--fs-click);
  }
  20% {
    /* [release] */
    transform: var(--transform-1);
    font-size: var(--fs-default);
  }
  30% {
    /* Move to second error */
    transform: var(--transform-2);
    font-size: var(--fs-default);
  }
  40% {
    /* [press] */
    transform: var(--transform-2);
    font-size: var(--fs-click);
  }
  50% {
    /* [release] */
    transform: var(--transform-2);
    font-size: var(--fs-default);
  }
}

@keyframes fade-to-valid {
  15% {
    background: var(--color-primary);
  }
  50% {
    background: var(--color-primary);
  }
}

@keyframes change-status {
  20% {
    transform: unset;
  }
  30% {
    /* Scroll to "compiling" */
    transform: translateY(calc(var(--status-height) + var(--status-gap)));
  }
  45% {
    /* Keep at "compiling" */
    transform: translateY(calc(var(--status-height) + var(--status-gap)));
  }
  50% {
    /* Scroll to "compiled" */
    transform: translateY(
      calc(2 * calc(var(--status-height) + var(--status-gap)))
    );
  }
  75% {
    /* Keep at "compiled" */
    transform: translateY(
      calc(2 * calc(var(--status-height) + var(--status-gap)))
    );
  }
  75.001% {
    /* Scroll to "error" */
    transform: unset;
  }
}

@keyframes spinner-rotation {
  from {
    rotate: 0;
  }
  to {
    rotate: 360deg;
  }
}
